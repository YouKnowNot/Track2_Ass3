nrow(data[is.na(data$ca) | is.na(data$thal),])
data[is.na(data$ca) | is.na(data$thal),]
nrow(data)
data <- data[!(is.na(data$ca) | is.na(data$thal)),]
nrow(data)
help("data")
xtabs(~ hd + sex, data=data)
xtabs(~ hd + cp, data=data)
xtabs(~ hd + fbs, data=data)
xtabs(~ hd + restecg, data=data)
xtabs(~ hd + exang, data=data)
xtabs(~ hd + slope, data=data)
xtabs(~ hd + ca, data=data)
xtabs(~ hd + thal, data=data)
xtabs(~ hd + sex, data=data)
logistic <- glm(hd ~ sex, data=data, family="binomial")
summary(logistic)
logistic <- glm(hd ~ ., data=data, family="binomial")
summary(logistic)
x <- list(a=1:5, b=rnorm(10))
x
x <- list(a=1:5, b=rnorm(10, mean=1))
x
x <- list(a=1:5, b=rnorm(10, mean=1, sd=10))
x
x <- list(a=1:5, b=rnorm(10, mean=1, sd=1))
x
lapply(x,mean)
v <- c(1,2,3,4,5)
lapply(v,mean)
lapply(v,mean)
lapply(v,mean)
x <- list(a=1:5, b=c("a","b")
)
lapply(x,mean)
x <- list(a=matrix(1:4,2,2), matrix(5:8, 2, 2))
x
lapply(x, function(f) f[,1])
lapply(x, function(f) f[1,1])
lapply(x, function(f) f[1,])
sapply(x, mean)
class(sapply(x, mean))
lapply(x, mean)
sapply(x, mean)
a<- sapply(x, mean)
a
a[1]
a[1:2]
a[1:3]
a <- rnorm(2 * 2 * 10)
a
a <- array(rnorm(2 * 2 * 10))
a
a <- array(rnorm(2 * 2 * 10), c("a","b"))
a
a <- array(rnorm(2 * 2 * 10), c(1,2))
a
a <- array(rnorm(2 * 2 * 10), c(1,2,10))
a
library("ggplot2")
ggplot(a)
ggplot(a)+
geom_point(aes(x=univ,y=dis,colour=year, size=paper))+
scale_color_viridis()+
scale_size(range=c(2,18))
figure; plot3(a)
library(reshape2)
library(rgl)
M=melt(a)
points3d(a)
a
apply(a,c(1,1))
apply(a,c(1,1), mean)
apply(a,c(1,2), mean)
b <- matrix(rnorm(20), 4,5)
b
apply(b, 1, mean)
apply(b, 2, mean)
a
apply(a, c(2,2))
apply(a, c(2,2), mean)
apply(a, c(2,2), mean)
a <- array(rnorm(2 * 2 * 10), c(1,2,10))
a
a[,1]
a[,1,1]
a[,,1]
a[,,2]
a
a <- array(rnorm(2 * 2 * 10), c(2,2,10))
a
a[1]
a[1,,]
a[1,1,]
a[1,1,1]
a[1,1,]
a[1,2,]
a[1,2,2]
a[1,2,3]
a[1,2,4]
a[1,2,5]
a[1,2,6]
a[1,2,10]
a[1,2,11]
noise <- function(n, mean, sd){}
noise <- function(n, mean, sd){}
noise <- function(n, mean, sd){
rnorm(n,mean,sd)}
noise()
noise(1,1,1)
noise(1,2,3)
noise(5,2,3)
noise(5:10,c(1,3,5),c(2,1))
mapply(noise,5:10,c(2,3), c(3,4))
ad <- function(x+y){
ad <- function(x,y){x+y}
mapply(ad, 1:5, 2)
mapply(ad, 1:5, c(2,3))
mapply(ad, 1:5, c(2,3,4,5))
mapply(ad, 1:5, c(2,3,4,5,6))
mapply(ad, 1:5, 1:2)
mapply(noise,5:10,c(2,3), c(3,4))
mapply(noise,1:5,c(2,3), c(3,4))
mapply(noise,5:10,c(2,3), c(3,4))
mapply(noise,5:10,c(2,3), c(3,4,1))
mapply(noise,5:10,c(2,3), c(3,4,1,4))
mapply(noise,5:10,c(2,3), c(3,3,3))
mapply(noise,5:10,c(2,3), c(2,2))
mapply(noise,5:10,c(2,3,4), c(2,2,4))
runif(10)
runif(10,1,10)
x <- c(rnorm(10),runif(10),rnorm(10,1))
x
y <- c(rnorm(10))
y
x
gl(3,10)
f<- gl(3,10)
f
tapply(x, f, mean)
library(datasets)
head(airquality)
oz <- airquality[,1]
oz
s < split(airquality, airquality$month)
s <- split(airquality, airquality$month)
s
s <- split(airquality, airquality$Month)
s
l <- c(1,2,3,4)
l
lapply(l, mean)
sapply(l, mean)
l <- c(matrix(1:4,2,2))
l
li <- c(matrix(1:4,2,2))
li
l <- list(1:4,2,2)
l
l <- list(a=1:4,2,2)
l
matrix(1:4,2,2)
l <- list(a=1:4,2,2)
l
l <- list(a=matrix(1:4,2,2))
l
lapply(l, function(h){ h[,1]})
L
l
sapply(l, function(h){ h[,1]})
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
x
lapply(x, mean)
sapply(x, mean)
eman(x)
mean(x)
x
str(mapply(function, ...))
str(mapply)
mapply(mean, 1:4)
mapply(mean, 1:4, 4:!)
mapply(mean, 1:4, 4:1)
mapply(mean, 1:4, 4:5)
mapply(mean, c(1,2,3,4), c(5,6,7,8))
noise <- function(n,mean,sd){
rnorm(n,mean,sd)}
noise(1,2,3)
noise(1,2:3,3:5)
noise(1,2:3,3:5)
mapply(noise,1:5,3)
mapply(noise,1:10, 1:5,3)
noise <- function(n,y,x){
n+y+x}
mapply(noise,1:10, 1:5,3)
mapply(noise, 1:10,1:2, 3)
gl(3,1:10)
gl(3,1:1)
gl(3,1:12)
gl(3,1)
g(5,1,10)
gl(5,1,10)
gl(5,1,11)
gl(2,3,9)
gl(3,3,9)
gl(3,10)
gl(3,2,10)
gl(3,10)
x
tapply(x,3)
tapply(x,10)
tapply(x,30)
tapply(x,f)
tapply(x,1:10)
length(x)
x
class(x)
w <- airquality[,30]
w <- airquality[c(1:30),]
w
w
tapply(w,month)
tapply(w,Month)
tapply(w,airwuality$Month)
tapply(w,airquality$Month)
tapply(w,airquality$Month, count.fields)
tapply(w,airquality$Month, mean)
tapply(w,airquality$Month, mean)
f <- airquality$Month
tapply(w,f, mean)
f
f <- airquality$Month[,c(1:30)]
f <- airquality$Month[,1]
f <- airquality$Month[,c(1)]
f <- airquality$Month[1:30]
f
tapply(w,f, mean)
f
w
length(f)
length(w)
f
length(f)
length(w)
w
nrow(w)
tapply(w,f, mean)
tapply(w,airquality$Month[1:30], mean)
f <- unique(w[,5])
f
tapply(w,f, mean)
tapply(w$Ozone,f, mean)
f
tapply(w$Ozone,w$Month, mean)
w <- airquality[c(1:200),]
w
tapply(w$Ozone,w$Month, mean)
tapply(w$Ozone,w$Month, mean, rm("NA"))
tapply(w$Ozone,w$Month, mean, rm("NA"), na.rm = TRUE)
tapply(w$Ozone,w$Month, mean, na.rm = TRUE)
split(w, w$Month)
split(w, w$Month)[1,]
split(w, w$Month)[1,1]
sp<-split(w, w$Month)[1,]
sp<-split(w, w$Month)
sp[1]
library(datasets)
data(iris)
?iris
head(iris)
nrow(iris)
data("iris")
head(iris)
split(iris,iris$Species )
sp<-split(iris,iris$Species )
class(split)
class(sp)
head(sp)
sp == virginica
sp[,4] == "virginica"
tapply(iris$Sepal.Length, iris$Species, mean)
sp[1]
sp[2]
sp[3]
sp["virginica"]
sp[name="virginica"]
mean(sp[name="virginica"])
vir <- sp["virginica"]
vir
class(vir)
vir
vir[,1]
vir[1]
vir <- data.frame(vir)
vir
mean(vir$virginica.Sepal.Length)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris[,1:4], iris$Species, mean)
tapply(iris[,c(1:4)], iris$Species, mean)
tapply(iris[,1], iris$Species, mean)
mean(iris)
mean(iris,1)
rowMean(iris)
rowMeans(iris)
colMean(iris)
colMeans(iris)
colMeans(iris[,1:4])
class(colMeans(iris[,1:4]))
apply(iris[,1:4], mean)
apply(iris[,1:4], 2, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(iris[,c(1:4)], iris$Species, mean)
mean(vir$virginica.Sepal.Length)
sp <- split(iris, iris$Species)
vir <- sp["virginica"]
vir
vir <- data.frame(vir)
mean(vir[,"virginical"])
mean(vir[,"virginica"])
mean(vir[,3])
mean(vir[,2])
mean(vir[,1])
tapply(iris$Sepal.Length, iris$Species, mean)
mean(sp[name="virginica"])
mean(vir$virginica.Sepal.Length)
mean(vir[,1])
mean(vir$virginica.Sepal.Length)
tapply(iris$Sepal.Length, iris$Species, mean)
#what R code returns a vector of the means of the variables
#'Sepal.Length', 'Sepal.Width', 'Petal.Length', and 'Petal.Width'?
#Option 1
rowMeans(iris,iris[,1:4])
#what R code returns a vector of the means of the variables
#'Sepal.Length', 'Sepal.Width', 'Petal.Length', and 'Petal.Width'?
#Option 1
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
#Option 2
apply(iris, iris[,1:4,], 2, mean)
apply(iris[,1:4,], 2, mean)
apply(iris[,1:4,], 1, mean)
head(mtcars)
#option 1
tapply(mtcars$mpg, mtcars$cyl)
#option 1
tapply(mtcars$mpg, mtcars$cyl ,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
h <- split(mtcars, mtcars$cyl)
h
h["8"]
colMean(h["4"][,4])
colMeana(h["4"][,4])
colMeans(h["4"][,4])
colMeans(h["4"])
h
class(h)
h["8"]
h["8"][1]
h["8"][1:4]
h["8"][,1]
h["8"][,1:4]
h["8"][,]
h["8"][]
h <- split(mtcars, mtcars$cyl)
h["8"]
d1 <- h["8"]
d1 <- data.frame(d1)
d2 <- h["4"]
d2 <- data.frame(d2)
m1 <- mean(d1[,4])
m2 <- mwan(d2,4)
abs(m1-m2)
h <- split(mtcars, mtcars$cyl)
h["8"]
d1 <- h["8"]
d1 <- data.frame(d1)
d2 <- h["4"]
d2 <- data.frame(d2)
m1 <- mean(d1[,4])
m2 <- mean(d2,4)
abs(m1-m2)
h <- split(mtcars, mtcars$cyl)
h["8"]
d1 <- h["8"]
d1 <- data.frame(d1)
d2 <- h["4"]
d2 <- data.frame(d2)
m1 <- mean(d1[,4])
m2 <- mean(d2[,4])
abs(m1-m2)
#option 2
m1 <- tapply(mtcars$hp,mtcars$cyl, mean)
m1
m1["4"]
abs(m1["4"] - m1["8"])
round(abs(m1["4"] - m1["8"]))
debug(ls)
round(mean(vir$virginica.Sepal.Length))
round(abs(m1["4"] - m1["8"]))
with(mtcars, tapply(mpg, cyl, mean))
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
#option 1
tapply(mtcars$mpg, mtcars$cyl ,mean)
exit
nn
#option 2
sapply(split(mtcars$mpg, mtcars$cyl), mean)
1
undebug(ls)
quit
quite()
quit()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(5)
g<-makeVector(5)
g
makeVector(1:5)
g<-makeVector(1:5)
g
g
g$getmean()
g<-makeVector(1:5)
g
g.getmean()
g[getmean()]
g["getmean"]
g["get"]
g
g[1]
g$set(4)
g
g$get()
g$getmean()
g$setmean()
g$setmean(mean)
mean =
;
g<-makeVector()
g
g$set(1:5)
g$get()
g$getmean()
g$getmean(g$get())
g
g$get()
g$getmean()
g$setmean()
spl
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
st <- dat[,7]
st <- unique(st)
ou <- c("heart attack", "heart failure", "pneumonia")
st <- dat[,7]
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("C:/Users/Amir/Desktop/jobs/Data Science/Track 2/Ass 3/Track2_Ass3")
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
st <- dat[,7]
st <- unique(st)
ou <- c("heart attack", "heart failure", "pneumonia")
mort <- dat[,c(2,7,11,17,23)]
cols <- c(3,4,5)
mort[,cols]<- lapply(mort[,cols],as.numeric)
colnames(sp) <- c("Hospital Name","State", "Heart Attack Rate", "Heart Failure Rate", "Pneumonia")
cols <- c(3,4,5)
mort[,cols]<- lapply(mort[,cols],as.numeric)
str(mort)
mort <- dat[,c(2,7,11,17,23)]
cols <- c(3,4,5)
mort[,cols]<- lapply(mort[,cols], as.numeric)
colnames(mort) <- c("Hospital Name","State", "Heart Attack Rate", "Heart Failure Rate", "Pneumonia")
str(mort)
x<- split(mort, mort$State)
x[1]
x[2]
length(x)
for i in length(x){}
for i in length(x){ print}
for i, i<= length(x){ print}
for i in length(x){ print}
for (i in length(x){ print("i")}
for (i in length(x)){ print("i")}
for (i in length(x)){ print(i)}
for (i in 1:length(x)){ print(i)}
table(complete.cases(x))
